#!/usr/bin/env node

/**
 * Universal Hook Wrapper for notification-hook
 * 
 * This script automatically detects the current platform (Windows/WSL/Linux)
 * and delegates execution to the appropriate platform-specific implementation.
 * 
 * Generated by: utils/create-universal-wrappers.js
 */

const path = require('path');
const UniversalHookWrapper = require(path.join(__dirname, '..', 'utils', 'universal-hook-wrapper.js'));

async function main() {
  // Get command line arguments (excluding node and script path)
  const args = process.argv.slice(2);
  
  // Create wrapper instance
  const wrapper = new UniversalHookWrapper({
    debug: process.env.DEBUG === 'true',
    hookDir: path.join(__dirname)
  });

  try {
    // Execute the hook
    const result = await wrapper.run('notification-hook', args);
    
    // Output results
    if (result.stdout) {
      process.stdout.write(result.stdout);
    }
    
    if (result.stderr) {
      process.stderr.write(result.stderr);
    }
    
    // Exit with the same code as the underlying script
    process.exit(result.exitCode);
    
  } catch (error) {
    console.error(`Universal wrapper error: ${error.message}`);
    process.exit(1);
  }
}

// Run the main function
if (require.main === module) {
  main().catch(error => {
    console.error(`Fatal error: ${error.message}`);
    process.exit(1);
  });
}

module.exports = main;

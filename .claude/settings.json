{
  "statusLine": {
    "type": "command",
    "command": "wsl.exe bash -c \u0027input=$(cat); current_dir=$(echo \"$input\" | jq -r \".workspace.current_dir // .cwd // \\\"\\\"\"); model_name=$(echo \"$input\" | jq -r \".model.display_name // \\\"\\\"\"); output_style=$(echo \"$input\" | jq -r \".output_style.name // \\\"default\\\"\"); dir_name=$(basename \"$current_dir\" 2\u003e/dev/null || echo \"~\"); current_time=$(date \"+%H:%M:%S\"); git_info=\"\"; if git rev-parse --git-dir \u003e/dev/null 2\u003e\u00261; then branch=$(git branch --show-current 2\u003e/dev/null || git rev-parse --short HEAD 2\u003e/dev/null || \"detached\"); git_status=\"\"; if ! git diff-index --quiet HEAD -- 2\u003e/dev/null; then git_status=\"*\"; fi; if [ -n \"$(git ls-files --others --exclude-standard 2\u003e/dev/null)\" ]; then git_status=\"${git_status}+\"; fi; git_info=\" \\\\033[36m‚éá\\\\033[0m \\\\033[93m${branch}${git_status}\\\\033[0m\"; fi; hostname=$(hostname -s); user=$(whoami); case \"$model_name\" in *\"Sonnet\"*) model_color=\"\\\\033[38;5;99m\"; model_icon=\"‚óÜ\";; *\"Haiku\"*) model_color=\"\\\\033[38;5;82m\"; model_icon=\"‚óá\";; *\"Opus\"*) model_color=\"\\\\033[38;5;208m\"; model_icon=\"‚óà\";; *) model_color=\"\\\\033[38;5;147m\"; model_icon=\"‚óå\";; esac; case \"$output_style\" in \"Explanatory\") style_icon=\"üìñ\";; \"Learning\") style_icon=\"üéì\";; \"Concise\") style_icon=\"‚ö°\";; *) style_icon=\"üí¨\";; esac; printf \"\\\\033[38;5;39müêßWSL\\\\033[0m %s %s%s%s\\\\033[0m ‚îÇ \\\\033[32m%s\\\\033[0m@\\\\033[33m%s\\\\033[0m ‚îÇ \\\\033[94müìÅ %s\\\\033[0m%s ‚îÇ \\\\033[90m‚è∞ %s\\\\033[0m ‚îÇ %s Ready\\n\" \"$style_icon\" \"$model_color\" \"$model_icon\" \"$model_name\" \"$user\" \"$hostname\" \"$dir_name\" \"$git_info\" \"$current_time\" \"$style_icon\"\u0027"
  },
  "hooks": {
    "Notification": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/notification-hook.js",
            "type": "command"
          }
        ],
        "matcher": ""
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/user-prompt-submit-hook.js",
            "type": "command"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/stop-hook.js",
            "type": "command"
          }
        ],
        "matcher": ""
      }
    ],
    "SubagentStop": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/subagent-stop-hook.js",
            "type": "command"
          }
        ],
        "matcher": ""
      }
    ],
    "PreCompact": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/pre-compact-hook.js",
            "type": "command"
          }
        ],
        "matcher": ""
      }
    ],
    "PostToolUse": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/post-tool-use-hook.js",
            "type": "command"
          }
        ],
        "matcher": ""
      }
    ],
    "PreToolUse": [
      {
        "hooks": [
          {
            "command": "node .claude/hooks/pre-tool-use-hook.js",
            "type": "command"
          }
        ],
        "matcher": ""
      }
    ]
  }
}